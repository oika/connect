#!/usr/bin/env python3
# -*- coding: utf-8 -*-


import sys
import pickle
import asyncio
from StreamingConf import StreamingConf


async def connect_client(argv, jm_addr, jm_port, loop):
    reader, writer = await asyncio.open_connection(jm_addr, jm_port, loop=loop)
    command = argv[1]
    if command == 'submit':
        message = {'cmd': 'submit', 'job_file': argv[2], 'job_name': argv[3]}
    elif command == 'prepare':
        message = {'cmd': 'prepare', 'job_name': argv[2]}
    elif command == 'run':
        message = {'cmd': 'run', 'job_name': argv[2]}
    elif command == 'pause':
        message = {'cmd': 'pause', 'job_name': argv[2]}
    elif command == 'cancel':
        message = {'cmd': 'cancel', 'job_name': argv[2]}
    else:
        return
    writer.write(pickle.dumps(message))
    writer.close()

conf = StreamingConf('cluster.yaml')
jm_addr = conf.get_jm_address()
jm_port = conf.get_jm_port()
loop = asyncio.get_event_loop()
loop.run_until_complete(connect_client(sys.argv, jm_addr, jm_port, loop))
